#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <8 9>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W             &kp E         &kp R         &kp T                                                                              &kp Y                       &kp U  &lt_to_layer_0 5 I  &kp O               &kp P
&kp A               &kp S             &kp D         &kp F         &kp G                          &mkp MB1                    &kp MINUS               &kp H                       &kp J  &kp K               &lt_to_layer_0 4 L  &kp SEMICOLON
&mt LEFT_CONTROL Z  &kp X             &kp C         &kp V         &kp B                          &kp LEFT_BRACKET            &kp RIGHT_BRACKET       &kp N                       &kp M  &kp COMMA           &kp DOT             &mt RIGHT_CONTROL SLASH
&kp LSHIFT          &kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 2 LS(CAPSLOCK)  &lt_to_layer_0 1 SPACE      &lt_to_layer_0 3 ENTER  &lt_to_layer_0 3 BACKSPACE                                                 &kp RSHFT
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        FUNCTION {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                             &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans      &trans   &trans  &trans  &trans  &trans  &kp F12
&trans        &trans        &trans        &trans        &trans        &trans      &kp DEL  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                              &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &trans      &kp UNDERSCORE  &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0
&kp GRAVE        &trans        &trans        &trans        &trans       &trans      &kp MINUS       &kp PLUS      &kp EQUAL      &kp SQT       &kp DOUBLE_QUOTES     &kp BACKSLASH
&trans           &trans        &trans        &trans        &trans       &trans      &kp DEL         &trans                                                           &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans  &trans       &trans       &trans                         &trans    &trans          &trans        &trans           &kp DEL
&trans      &trans  &trans       &trans       &trans  &trans        &trans   &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP
&trans      &trans  &kp LC(INS)  &kp LS(INS)  &trans  &kp HOME      &kp END  &kp PLUS  &kp EQUAL       &kp SQT       &kp DQT          &kp PAGE_DOWN
&trans      &trans  &trans       &trans       &trans  &trans        &trans   &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans    &trans    &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans    &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB4  &mkp MB5                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
